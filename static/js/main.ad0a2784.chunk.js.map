{"version":3,"sources":["state/TDEEState.tsx","utils/WeightLossUtils.ts","components/TDEEInput.tsx","components/WeightLossGoals.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["state","atom","key","default","gender","weight","age","bfp","height","exerciseVolume","activityScale","deficit","deficitMode","days","weightGoal","calculateTdee","tdee","bmr","result","calorieLoss","tdeeParams","calorieIntake","exercise","TDEEInput","useRecoilState","TDEEState","tdeeState","setTDEEState","Container","className","FormControl","style","flexGrow","flexBasis","width","variant","InputLabel","shrink","Select","label","value","defaultValue","onChange","e","target","map","x","MenuItem","display","gap","TextField","type","inputProps","inputMode","min","event","Number","parseInt","Math","floor","Typography","gutterBottom","Slider","aria-labelledby","step","valueLabelDisplay","max","marks","valueLabelFormat","Card","padding","addDays","date","Date","setDate","getDate","WeightLossGoals","goal","average","console","log","newTdee","i","push","reduce","a","b","getGoalDate","getDeficitBasedOnMode","toFixed","weightGoalText","toString","ToggleButtonGroup","aria-label","exclusive","newAlignment","ToggleButton","getUnitBasedOnMode","_","moment","format","App","useTheme","flexDirection","AppBar","position","Toolbar","color","Grid","container","xs","spacing","item","lg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad0a2784.chunk.js","sourcesContent":["import {atom, selector, useRecoilState} from \"recoil\";\r\n\r\nlet TDEEState = atom({\r\n  key: 'TDEEState',\r\n  default: {\r\n    gender: 'Male',\r\n    weight: 160,\r\n    age: 20,\r\n    bfp: 0,\r\n    height: 12 * 5,\r\n    exerciseVolume: 0,\r\n    activityScale: 1.2,\r\n    deficit: -10,\r\n    deficitMode: 'calories',\r\n    days: 30,\r\n    weightGoal: 150\r\n  }\r\n});\r\n\r\nexport default {\r\n  state: TDEEState,\r\n};","export function calculateTdee(tdee: any, deficit: number): { tdeeParams: any, bmr: number, tdee: number, calorieIntake: number, calorieLoss: number, exercise: number } {\r\n  const bmr = (10 * tdee.weight * 0.453592) + (6.25 * tdee.height * 2.54) - (5 * tdee.age) + (tdee.gender === 'Male' ? 5 : 161);\r\n  const result = bmr * tdee.activityScale;\r\n  const calorieLoss = (result * deficit);\r\n  return {\r\n    tdeeParams: {...tdee, weight: tdee.weight + (calorieLoss / 3500) },\r\n    bmr,\r\n    tdee: result,\r\n    calorieIntake: result + calorieLoss,\r\n    calorieLoss,\r\n    exercise: result - bmr\r\n  };\r\n}\r\n\r\nexport function compoundTdee(tdee: any, deficit: number, days: number, step: number): any {\r\n  if(!tdee.weightGoal || !tdee.weight || tdee.weight <= tdee.weightGoal) {\r\n    return [tdee];\r\n  }\r\n  step = step ?? 1;\r\n  let resultData = [];\r\n  let newTdee = {...tdee, tdeeParams: tdee};\r\n  for (let i = 0; i < days; i++) {\r\n    // console.log('new tdee params', newTdee.tdeeParams);\r\n    newTdee = calculateTdee(newTdee.tdeeParams, deficit);\r\n    if(i % step === 0)\r\n      resultData.push({...newTdee, day: i});\r\n  }\r\n  // console.log(resultData);\r\n  return resultData;\r\n}\r\n\r\nexport function getGoalDate(tdee: any, deficit: number): any {\r\n  if(!tdee.weightGoal || !tdee.weight || tdee.weight <= tdee.weightGoal) {\r\n    return {days: 0, average: 0};\r\n  }\r\n  console.log('getting goal date', deficit, tdee);\r\n  let newTdee = {...tdee, tdeeParams: tdee};\r\n  console.log('new tdee', newTdee);\r\n  let calorieLoss = [];\r\n  for (let i = 0; i < 365 * 2; i++) {\r\n    console.log('Calculating new TDEE');\r\n    newTdee = calculateTdee(newTdee.tdeeParams, deficit);\r\n    calorieLoss.push(newTdee.calorieLoss);\r\n    if(newTdee.tdeeParams.weightGoal > newTdee.tdeeParams.weight)\r\n      return {days: i, average: calorieLoss.reduce((a: number, b: number) => a + b, 0) / i};\r\n  }\r\n\r\n  return {days: -1, average: -1};\r\n}","import {\r\n  Box,\r\n  Card, Container,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Slider,\r\n  Switch,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport \"./TDEEInput.scss\"\r\nimport React, {useState} from \"react\";\r\nimport {useRecoilState} from \"recoil\";\r\nimport TDEEState from \"../state/TDEEState\";\r\nimport {calculateTdee} from \"../utils/WeightLossUtils\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport {flexbox, spacing} from '@mui/system';\r\n\r\nfunction TDEEInput() {\r\n  const [tdeeState, setTDEEState] = useRecoilState(TDEEState.state);\r\n  // const [gender, setGender] = useState('Male')\r\n  // const [weight, setWeight] = useState(0);\r\n  // const [age, setAge] = useState(0);\r\n  // const [bfp, setBfp] = useState(0);\r\n  // const [inches, setInches] = useState(0);\r\n  // const [exerciseVolume, setExerciseVolume] = useState(0);\r\n\r\n  return (\r\n    <Container className={\"card-container\"}>\r\n      <h2>Find your Total Daily Energy Expenditure</h2>\r\n      {/*<span style={{display: 'block', position: \"relative\", top: '-1rem', marginBottom: 0}}>(How much you burn a day)</span>*/}\r\n      <form>\r\n        <FormControl style={{flexGrow: 1, flexBasis: 0, width: '100%'}} variant='filled'>\r\n          <InputLabel shrink>Gender</InputLabel>\r\n          <Select label={'Gender'}\r\n                  value={tdeeState.gender}\r\n                  defaultValue={\"\"}\r\n                  onChange={(e, value) => setTDEEState({...tdeeState, gender: e.target.value as string})}\r\n                  style={{width: '100%'}}\r\n          >\r\n            {['Male', 'Female'].map(x => (<MenuItem key={x} value={x}>{(x as string)}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n        <div style={{display:'flex', gap: '1rem'}}>\r\n          <TextField\r\n            label=\"Weight\"\r\n            type=\"number\"\r\n            inputProps={{inputMode:\"numeric\", min: 0}}\r\n            variant='filled'\r\n            style={{flexGrow: 1}}\r\n            value={tdeeState.weight}\r\n            onChange={(event) => setTDEEState({...tdeeState, weight: Number.parseInt(event.target.value)})}\r\n          />\r\n          <TextField\r\n            label=\"Age\"\r\n            type=\"number\"\r\n            inputProps={{inputMode:\"numeric\", min: 0}}\r\n            variant='filled'\r\n            style={{flexGrow: 1}}\r\n            value={tdeeState.age}\r\n            onChange={(event) => setTDEEState({...tdeeState, age:  Number.parseInt(event.target.value)})}\r\n          />\r\n        </div>\r\n        <div className=\"height-controls\">\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel shrink>Height (ft)</InputLabel>\r\n            <Select\r\n              label={'ft'}\r\n              value={Math.floor(tdeeState.height / 12) < 4 ? 4 : Math.floor(tdeeState.height / 12)}\r\n              defaultValue={4}\r\n              onChange={(e, value) => setTDEEState({\r\n                ...tdeeState,\r\n                height: (e.target.value as number) * 12 + (tdeeState.height % 12)\r\n              })}\r\n            >\r\n              {[4, 5, 6, 7, 8].map(x => (<MenuItem key={x} value={x}>{x}'</MenuItem>))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel shrink>Height (in)</InputLabel>\r\n            <Select label={'in'}\r\n                    value={tdeeState.height % 12}\r\n                    defaultValue={0}\r\n                    onChange={(e, value) => {\r\n                      setTDEEState({\r\n                        ...tdeeState,\r\n                        height: (tdeeState.height - tdeeState.height % 12) + (e.target.value as number)\r\n                      });\r\n                    }}>\r\n              {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map(x => (<MenuItem key={x} value={x}>{x}\"</MenuItem>))}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className=\"weight-control\" style={{flexGrow: 1, flexBasis: 0}}>\r\n          <Typography gutterBottom>How active are you? (Calories burned through daily routine and exercise)</Typography>\r\n          <div className=\"slider-control\">\r\n            <Slider\r\n              defaultValue={1.2}\r\n              aria-labelledby=\"discrete-slider-custom\"\r\n              step={0.01}\r\n              valueLabelDisplay=\"auto\"\r\n              min={1.1}\r\n              max={2.4}\r\n              marks = {[\r\n                {\r\n                  value: 1.2,\r\n                  label: 'Sedentary'\r\n                },\r\n                {\r\n                  value: 1.55,\r\n                  label: 'Moderately'\r\n                },\r\n                {\r\n                  value: 1.9,\r\n                  label: 'Extremely'\r\n                },\r\n                {\r\n                  value: 2.3,\r\n                  label: 'Athlete'\r\n                }\r\n              ]}\r\n              valueLabelFormat={(value) => `${Math.floor(calculateTdee(tdeeState, tdeeState.deficit / 100).exercise)}`}\r\n              value={tdeeState.activityScale}\r\n              onChange={(e, value) => setTDEEState({...tdeeState, activityScale: value as number})}\r\n            />\r\n            {/*<Typography>{tdeeState.activityScale}</Typography>*/}\r\n          </div>\r\n        </div>\r\n        <Card variant=\"outlined\" style={{padding: '1rem'}}>\r\n          <div className=\"weight-control\" style={{flexGrow: 1, flexBasis: 0}}>\r\n            <Typography gutterBottom>Your Basal Metabolic Rate (BMR)\r\n              is <strong>{Math.floor(calculateTdee(tdeeState, tdeeState.deficit / 100).bmr)} cal</strong>.</Typography>\r\n          </div>\r\n          <div className=\"weight-control\" style={{flexGrow: 1, flexBasis: 0}}>\r\n            <Typography gutterBottom>You\r\n              burn <strong>{Math.floor(calculateTdee(tdeeState, tdeeState.deficit / 100).exercise)} cal</strong> from\r\n              exercise and daily activities.</Typography>\r\n          </div>\r\n          <div className=\"weight-control\" style={{flexGrow: 1, flexBasis: 0}}>\r\n            <Typography gutterBottom>Your total daily energy expenditure (with exercise)\r\n              is <strong>{Math.floor(calculateTdee(tdeeState, tdeeState.deficit / 100).tdee)} cal</strong>.</Typography>\r\n          </div>\r\n        </Card>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TDEEInput;","import {\r\n  Container,\r\n  Slider, TextField,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport \"./TDEEInput.scss\"\r\n\r\nimport {useRecoilState} from \"recoil\";\r\nimport TDEEState from \"../state/TDEEState\";\r\nimport {calculateTdee, getGoalDate} from \"../utils/WeightLossUtils\";\r\nimport moment from \"moment\";\r\nimport {Card, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nfunction addDays(date: Date, days: number) {\r\n  var result = new Date(date);\r\n  result.setDate(result.getDate() + days);\r\n  return result;\r\n}\r\n\r\nfunction WeightLossGoals() {\r\n  const [tdeeState, setTDEEState] = useRecoilState(TDEEState.state);\r\n\r\n  function goal() {\r\n    let result = getGoalDate(tdeeState, tdeeState.deficit / 100)\r\n    console.log('result: ', result);\r\n    return result;\r\n  }\r\n\r\n  function getBodyWeightPercentageDelta() {\r\n    let goalResult = (goal().average as number) * 7 / 3500;\r\n    let result = 1 * goalResult / tdeeState.weight;\r\n    return (result * 100).toFixed(2)\r\n  }\r\n\r\n  function getDeficitBasedOnMode() {\r\n    switch(tdeeState.deficitMode) {\r\n      case 'calories':\r\n        return (goal().average).toFixed(0);\r\n      case 'caloriePercentage':\r\n        return tdeeState.deficit;\r\n      case 'bodyWeightPercentage':\r\n        return getBodyWeightPercentageDelta();\r\n      default:\r\n        return tdeeState.deficit;\r\n    }\r\n  }\r\n\r\n  function getUnitBasedOnMode() {\r\n    switch(tdeeState.deficitMode) {\r\n      case 'calories':\r\n        return ' calories per day';\r\n      case 'caloriePercentage':\r\n        return ' % of TDEE per day';\r\n      case 'bodyWeightPercentage':\r\n      default:\r\n        return '% of body weight per week';\r\n    }\r\n\r\n  }\r\n\r\n  let weightGoalText: string = tdeeState.weightGoal.toString();\r\n\r\n  return (\r\n    <Container className={\"card-container\"}>\r\n      <h2>Set your weight loss goals</h2>\r\n      <form>\r\n        <TextField\r\n          label=\"Target Weight\"\r\n          type=\"number\"\r\n          inputProps={{inputMode:\"numeric\", min: 0}}\r\n          variant='filled'\r\n          style={{width: '100%'}}\r\n          value={weightGoalText}\r\n          onChange={(event) => {\r\n            // weightGoalText = event.target.value;\r\n            // if(!event.target.value) return;\r\n            console.log('Setting weightGoal to: ', event.target.value);\r\n            setTDEEState({\r\n              ...tdeeState,\r\n              weightGoal: Number.parseInt(event.target.value)\r\n            })\r\n          }}\r\n\r\n        />\r\n        {/*<div className={'height-controls'}>*/}\r\n        {/*  /!*<div className=\"weight-control\" style={{flexGrow: 1, flexBasis: 0 }}>*!/*/}\r\n        {/*  /!*  <Typography gutterBottom>Target Weight (lbs)</Typography>*!/*/}\r\n        {/*  /!*  <div className=\"slider-control\">*!/*/}\r\n        {/*  /!*    <Slider*!/*/}\r\n        {/*  /!*      defaultValue={150}*!/*/}\r\n        {/*  /!*      aria-labelledby=\"discrete-slider-custom\"*!/*/}\r\n        {/*  /!*      step={1}*!/*/}\r\n        {/*  /!*      valueLabelDisplay=\"auto\"*!/*/}\r\n        {/*  /!*      min={50}*!/*/}\r\n        {/*  /!*      max={300}*!/*/}\r\n        {/*  /!*      value={tdeeState.weightGoal}*!/*/}\r\n        {/*  /!*      onChange={(e, value) => setTDEEState({...tdeeState, weightGoal: value as number})}*!/*/}\r\n        {/*  /!*    />*!/*/}\r\n        {/*  /!*    <Typography>{tdeeState.weightGoal}</Typography>*!/*/}\r\n        {/*  /!*  </div>*!/*/}\r\n        {/*  /!*</div>*!/*/}\r\n        {/*  /!*<div className=\"weight-control\" style={{flexGrow: 1, flexBasis: 0 }}>*!/*/}\r\n        {/*  /!*  <Typography gutterBottom>Target Body Fat Percentage</Typography>*!/*/}\r\n        {/*  /!*  <Slider*!/*/}\r\n        {/*  /!*    defaultValue={25}*!/*/}\r\n        {/*  /!*    aria-labelledby=\"discrete-slider-custom\"*!/*/}\r\n        {/*  /!*    step={1}*!/*/}\r\n        {/*  /!*    valueLabelDisplay=\"auto\"*!/*/}\r\n        {/*  /!*    min={1}*!/*/}\r\n        {/*  /!*    max={50}*!/*/}\r\n        {/*  /!*  />*!/*/}\r\n        {/*  /!*</div>*!/*/}\r\n        {/*</div>*/}\r\n        {/*<div className={'height-controls'}>*/}\r\n        <Typography gutterBottom>How do you want to measure your daily change?</Typography>\r\n        <ToggleButtonGroup style={{width: '100%'}}\r\n                           aria-label=\"outlined primary button group\" value={tdeeState.deficitMode}\r\n                           exclusive\r\n                           onChange={(\r\n                             event: React.MouseEvent<HTMLElement>,\r\n                             newAlignment: string | null,\r\n                           ) => {\r\n                             setTDEEState({...tdeeState, deficitMode: newAlignment || ''})\r\n                           }}\r\n        >\r\n          <ToggleButton value=\"calories\">Calories<br/>(Per Day)</ToggleButton>\r\n          <ToggleButton value=\"caloriePercentage\">TDEE %<br/>(Per Day)</ToggleButton>\r\n          <ToggleButton value=\"bodyWeightPercentage\">Body Weight %<br/>(Per Week)</ToggleButton>\r\n        </ToggleButtonGroup>\r\n        <Typography gutterBottom>Target Change: {getDeficitBasedOnMode() + getUnitBasedOnMode()}</Typography>\r\n        <div className=\"slider-control\">\r\n          <Slider\r\n            defaultValue={-1}\r\n            aria-labelledby=\"discrete-slider-custom\"\r\n            step={0.01}\r\n            valueLabelDisplay=\"auto\"\r\n            value={tdeeState.deficit}\r\n            onChange={(e, value) => setTDEEState({...tdeeState, deficit: value as number})}\r\n            min={-75}\r\n            max={0}\r\n            marks={[\r\n              {\r\n                value: 0,\r\n                label: 'Maintenance'\r\n              },\r\n              {\r\n                value: -19,\r\n                label: 'Slow',\r\n              },\r\n              {\r\n                value: -30,\r\n                label: 'Fast',\r\n\r\n              },\r\n              {\r\n                value: -60,\r\n                label: 'Crash Diet'\r\n              }\r\n            ]}\r\n            valueLabelFormat={(_) => getDeficitBasedOnMode()}\r\n          />\r\n        </div>\r\n        {/*  <div className=\"weight-control\" style={{flexGrow: 1, flexBasis: 0 }}>*/}\r\n        {/*    <Typography gutterBottom>End Deficit</Typography>*/}\r\n        {/*    <Slider*/}\r\n        {/*      defaultValue={0}*/}\r\n        {/*      aria-labelledby=\"discrete-slider-custom\"*/}\r\n        {/*      step={1}*/}\r\n        {/*      valueLabelDisplay=\"auto\"*/}\r\n        {/*      min={-50}*/}\r\n        {/*      max={50}*/}\r\n        {/*    />*/}\r\n        {/*  </div>*/}\r\n        {/*</div>*/}\r\n        {/*<div className=\"weight-control\" style={{flexGrow: 1, flexBasis: 0 }}>*/}\r\n        {/*  <Typography gutterBottom>Amount of Days on Graph</Typography>*/}\r\n        {/*  <div className=\"slider-control\">*/}\r\n        {/*    <Slider*/}\r\n        {/*      defaultValue={30}*/}\r\n        {/*      aria-labelledby=\"discrete-slider-custom\"*/}\r\n        {/*      step={1}*/}\r\n        {/*      valueLabelDisplay=\"auto\"*/}\r\n        {/*      min={1}*/}\r\n        {/*      max={365 * 2}*/}\r\n        {/*      value={tdeeState.days}*/}\r\n        {/*      onChange={(e, value) => setTDEEState({...tdeeState, days: value as number})}*/}\r\n        {/*    />*/}\r\n        {/*    <Typography>{tdeeState.days}</Typography>*/}\r\n        {/*  </div>*/}\r\n        {/*</div>*/}\r\n        <Card variant=\"outlined\" style={{padding: '1rem'}}>\r\n          <div className=\"weight-control\" style={{flexGrow: 1, flexBasis: 0}}>\r\n            <Typography gutterBottom>Your initial target calorie intake should\r\n              be <strong>{Math.floor(calculateTdee(tdeeState, tdeeState.deficit / 100).calorieIntake)} cal</strong>.</Typography>\r\n          </div>\r\n          <div className=\"weight-control\" style={{flexGrow: 1, flexBasis: 0}}>\r\n            <Typography gutterBottom>You will\r\n              reach <strong>{tdeeState.weightGoal} lbs </strong> in <strong>{goal().days} days</strong> on <strong>{moment(addDays(new Date(), goal().days)).format('MMM Do YY')}</strong> with\r\n              an average weight loss of <strong>{((goal().average as number) * 7 / 3500).toFixed(2)} lbs</strong> per\r\n              week and <strong>{(goal().average * -1).toFixed(0)} cal</strong> burned per day.</Typography>\r\n          </div>\r\n        </Card>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default WeightLossGoals;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport TDEEInput from \"./components/TDEEInput\";\nimport {\n  AppBar,\n  BottomNavigation,\n  BottomNavigationAction,\n  Container,\n  Grid,\n  IconButton,\n  Toolbar,\n  Typography\n} from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport WeightLossGoals from \"./components/WeightLossGoals\";\nimport Timeline from \"./components/Timeline\";\nimport { useTheme } from '@mui/material';\n\n\nfunction App() {\n  const theme = useTheme();\n  return (\n    <div className=\"App\" style={{display: 'flex', flexDirection: 'column', height: '100%'}}>\n      <AppBar position={\"static\"}>\n        <Toolbar variant=\"dense\">\n          {/*<IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">*/}\n          {/*  <MenuIcon />*/}\n          {/*</IconButton>*/}\n          <Typography variant=\"h6\" color=\"inherit\">\n            Weight Loss Planner and Visualizer\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Container className=\"main-container\">\n        <Grid container xs={12} spacing={4}>\n          <Grid item xs={12} lg={6} className=\"top-grid\">\n            <TDEEInput/>\n          </Grid>\n          <Grid item xs={12} lg={6} className=\"bottom-grid\">\n            <WeightLossGoals/>\n          </Grid>\n          {/*<Grid item xs={12}>*/}\n          {/*  <Timeline/>*/}\n          {/*</Grid>*/}\n        </Grid>\n      </Container>\n      {/*<BottomNavigation style={{position: 'absolute', bottom: 0, right: 0, left: 0, display: 'flex'}}>*/}\n      {/*  <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />*/}\n      {/*  <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />*/}\n      {/*  <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />*/}\n      {/*</BottomNavigation>*/}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {RecoilRoot} from \"recoil\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}